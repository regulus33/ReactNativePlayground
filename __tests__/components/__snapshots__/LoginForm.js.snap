// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing CameraSettings renders as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginForm
    email=""
    emailChanged={[Function]}
    error=""
    loading={false}
    loginUser={[Function]}
    password=""
    passwordChanged={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <CardSection>
          <Input
            label="Email"
            onChangeText={[Function]}
            placeholder="email@gmail.com"
            value=""
          />
        </CardSection>,
        <CardSection>
          <Input
            label="Password"
            onChangeText={[Function]}
            placeholder="password"
            secureTextEntry={true}
            value=""
          />
        </CardSection>,
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "alignSelf": "center",
              "color": "red",
              "fontSize": 20,
            }
          }
        >
          
        </Text>,
        <CardSection>
          <Button
            onPress={[Function]}
          >
            Login
          </Button>
        </CardSection>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Input
            label="Email"
            onChangeText={[Function]}
            placeholder="email@gmail.com"
            value=""
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "label": "Email",
            "onChangeText": [Function],
            "placeholder": "email@gmail.com",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Input
            label="Password"
            onChangeText={[Function]}
            placeholder="password"
            secureTextEntry={true}
            value=""
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "label": "Password",
            "onChangeText": [Function],
            "placeholder": "password",
            "secureTextEntry": true,
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "accessible": true,
          "allowFontScaling": true,
          "children": "",
          "ellipsizeMode": "tail",
          "style": Object {
            "alignSelf": "center",
            "color": "red",
            "fontSize": 20,
          },
        },
        "ref": null,
        "rendered": "",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Button
            onPress={[Function]}
          >
            Login
          </Button>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Login",
            "onPress": [Function],
          },
          "ref": null,
          "rendered": "Login",
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <CardSection>
            <Input
              label="Email"
              onChangeText={[Function]}
              placeholder="email@gmail.com"
              value=""
            />
          </CardSection>,
          <CardSection>
            <Input
              label="Password"
              onChangeText={[Function]}
              placeholder="password"
              secureTextEntry={true}
              value=""
            />
          </CardSection>,
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "alignSelf": "center",
                "color": "red",
                "fontSize": 20,
              }
            }
          >
            
          </Text>,
          <CardSection>
            <Button
              onPress={[Function]}
            >
              Login
            </Button>
          </CardSection>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Input
              label="Email"
              onChangeText={[Function]}
              placeholder="email@gmail.com"
              value=""
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "label": "Email",
              "onChangeText": [Function],
              "placeholder": "email@gmail.com",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Input
              label="Password"
              onChangeText={[Function]}
              placeholder="password"
              secureTextEntry={true}
              value=""
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "label": "Password",
              "onChangeText": [Function],
              "placeholder": "password",
              "secureTextEntry": true,
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "",
            "ellipsizeMode": "tail",
            "style": Object {
              "alignSelf": "center",
              "color": "red",
              "fontSize": 20,
            },
          },
          "ref": null,
          "rendered": "",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Button
              onPress={[Function]}
            >
              Login
            </Button>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Login",
              "onPress": [Function],
            },
            "ref": null,
            "rendered": "Login",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
